// <auto-generated />
using System;
using CalculationServiceRest.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CalculationServiceRest.Migrations
{
    [DbContext(typeof(CalculationDbContext))]
    [Migration("20190912134419_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CalculationServiceRest.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("InsertDate")
                        .HasColumnName("INSERT_DATE");

                    b.Property<int>("ParentId")
                        .HasColumnName("METHOD_TYPE");

                    b.Property<byte[]>("Value")
                        .IsRequired()
                        .HasColumnName("VALUE")
                        .HasColumnType("binary(50)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("CalculationServiceRest.Models.MethodType", b =>
                {
                    b.Property<int>("Id");

                    b.Property<TimeSpan>("InsertDate")
                        .HasColumnName("INSERT_DATE");

                    b.HasKey("Id");

                    b.ToTable("MethodTypes");
                });

            modelBuilder.Entity("CalculationServiceRest.Models.Log", b =>
                {
                    b.HasOne("CalculationServiceRest.Models.MethodType", "MethodType")
                        .WithMany("Logs")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
